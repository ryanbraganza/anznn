- field_id = "question_#{q.id}"
- answer = @question_id_to_answers[q.id]
- answer = @response.answers.build(question: q) unless answer

%div{id: "container_#{q.id}", class: answer.has_warning? ? "clearfix warning" : "clearfix"}
  = label_tag field_id, q.question, class: 'data-domain', title: (q.data_domain ? q.data_domain.gsub(/\n/m, '<br>') : "")
  .input
    - case q.question_type
      - when 'Text'
        = text_field_tag "answers[#{q.id}]", answer.text_answer, id: field_id, placeholder: 'Text Response', maxlength: 255,
          class: 'xxlarge field_trigger',
          data: {description: q.description, guide: q.guide_for_use}
      - when 'Date'
        - day = answer.date_answer ? answer.date_answer.day : nil
        - month = answer.date_answer ? answer.date_answer.month : nil
        - year = answer.date_answer ? answer.date_answer.year : nil
        = select_day(day, {field_name: "#{q.id}][day", prompt: true, prefix: "answers"},
          class: "small field_trigger",
          data: {description: q.description, guide: q.guide_for_use})
        = select_month(month, {field_name: "#{q.id}][month", prompt: true, prefix: "answers", use_month_numbers: true},
          class: "small field_trigger",
          data: {description: q.description, guide: q.guide_for_use})
        = select_year(year, {field_name: "#{q.id}][year", prompt: true, prefix: "answers"},
          class: "small field_trigger",
          data: {description: q.description, guide: q.guide_for_use})
      - when 'Time'
        - hour = answer.time_answer ? answer.time_answer.hour : nil
        - min = answer.time_answer ? answer.time_answer.min : nil
        = select_hour(hour, {field_name: "#{q.id}][hour", prompt: true, prefix: "answers"},
          class: "small field_trigger",
          data: {description: q.description, guide: q.guide_for_use})
        = select_minute(min, {field_name: "#{q.id}][min", prompt: true, prefix: "answers"},
          class: "small field_trigger",
          data: {description: q.description, guide: q.guide_for_use})
      - when 'Choice'
        %ul.inputs-list
          - q.question_options.each do |qo|
            %li
              %label.field_trigger
                = radio_button_tag "answers[#{q.id}]", qo.option_value, (answer.choice_answer == qo.option_value),
                  class: 'field_trigger',
                  data: {description: q.description, guide: q.guide_for_use}
                %span.radio-label= "(#{qo.option_value}) #{qo.label}"
                %span.help-block=  qo.hint_text
      - when 'Decimal'
        = text_field_tag "answers[#{q.id}]", answer.decimal_answer, id: field_id, placeholder: 'Decimal Response', maxlength: 15,
          class: 'medium field_trigger',
          data: {description: q.description, guide: q.guide_for_use}
      - when 'Integer'
        = text_field_tag "answers[#{q.id}]", answer.integer_answer, id: field_id, placeholder: 'Integer Response', maxlength: 15,
          class: 'medium field_trigger',
          data: {description: q.description, guide: q.guide_for_use}
      - else
        Question type not recognised!
    %span.help-block
      - if answer.has_warning?
        = answer.warning
      - else
        = HelpTextGenerator.new(q).help_text
